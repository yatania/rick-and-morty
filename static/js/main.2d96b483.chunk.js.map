{"version":3,"sources":["components/Loader/Loader.jsx","components/CharactersPage/Characters/Characters.jsx","components/Pagination/Pagination.jsx","api/api.js","components/CharactersPage/CharactersPage.jsx","App.jsx","index.js"],"names":["Loader","className","Characters","characters","isLoading","map","character","key","id","src","image","alt","name","gender","species","status","Pagination","page","nextPage","prevPage","pageNumbers","max","i","push","type","onClick","pageNumber","href","request","url","newError","Error","fetch","then","response","ok","json","Promise","reject","getCharacters","endpoint","a","charactersList","CharactersPage","useState","setCharacters","setIsLoading","currentPage","setCurrentPage","allPages","setAllPages","useEffect","listOfCharacters","pagesCount","results","info","pages","serverResponse","App","ReactDOM","render","document","getElementById"],"mappings":"oVAGaA,G,MAAS,kBACpB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,uBCGNC,G,WAAa,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAC3B,OADuD,EAAhBC,UAE9B,kBAAC,EAAD,MAIP,yBAAKH,UAAU,SACZE,EAAWE,KAAI,SAAAC,GAAS,OACvB,yBAAKL,UAAU,mBAAmBM,IAAKD,EAAUE,IAC/C,yBAAKP,UAAU,cACb,yBACEQ,IAAKH,EAAUI,MACfC,IAAI,YACJV,UAAU,kBAGd,wBAAIA,UAAU,kDACXK,EAAUM,MAEb,yBAAKX,UAAU,oBACb,6CACcK,EAAUO,SAExB,8CACeP,EAAUQ,UAEzB,6CACcR,EAAUS,iBChCvBC,EAAa,SAAC,GAKzB,IAL2D,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACrCC,EAAc,GAEhBC,EAAMJ,EAAO,EAERK,EAHCL,EAGQK,EAAID,EAAKC,GAAK,EAC9BF,EAAYG,KAAKD,GAGnB,OACE,yBAAKrB,UAAU,UACb,4BACEuB,KAAK,SACLC,QAAS,kBAAMN,KACflB,UAAU,qBAHZ,YAOA,wBAAIA,UAAU,mBACXmB,EAAYf,KAAI,SAAAqB,GAAU,OACzB,wBAAInB,IAAKU,GACP,uBAAGU,KAAK,KAAK1B,UAAU,mBACpByB,QAKT,4BACEF,KAAK,SACLC,QAAS,kBAAMP,KACfjB,UAAU,qBAHZ,UC5BO2B,EAAU,SAACC,GACtB,IAAMC,EAAW,IAAIC,MAAM,4BAE3B,OAAOC,MAAM,GAAD,OALG,mCAKH,OAAeH,IACxBI,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAOR,OAIfS,EAAa,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACEb,EAAQ,aAAD,OAAcY,GAAY,KADnC,cACrBE,EADqB,yBAGpBA,GAHoB,2CAAH,sDCTbC,EAAiB,WAC5B,MAAoCC,mBAAS,IAA7C,mBAAOzC,EAAP,KAAmB0C,EAAnB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOxC,EAAP,KAAkB0C,EAAlB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,YACY,uCAAG,8BAAAV,EAAA,6DACrBK,GAAa,GADQ,SAGUP,EAAc,UAAD,OAAWQ,IAHlC,cAGfK,EAHe,gBAKIb,IALJ,OAKfc,EALe,OAOrBR,EAAcO,EAAiBE,SAC/BJ,EAAYG,EAAWE,KAAKC,OAC5BV,GAAa,GATQ,4CAAH,qDAYpBW,KACC,CAACT,EAAgBD,IAUpB,OACE,yBAAK9C,UAAU,mBACb,kBAAC,EAAD,CACEgB,KAAM8B,EACN7B,SAZW,WACf8B,EAAgBD,EAAc,GAAME,IAYhC9B,SATW,WACf6B,EAAgBD,EAAc,GAAM,MAUlC,kBAAC,EAAD,CAAY5C,WAAYA,EAAYC,UAAWA,MC3BtCsD,G,MAXH,WAEV,OACE,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,UCNR0D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2d96b483.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../../Loader/Loader';\n\nimport 'bulma';\nimport './Characters.scss';\n\nexport const Characters = ({ characters, isLoading }) => {\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"cards\">\n      {characters.map(character => (\n        <div className=\"card cards__card\" key={character.id}>\n          <div className=\"card-image\">\n            <img\n              src={character.image}\n              alt=\"Character\"\n              className=\"cards__image\"\n            />\n          </div>\n          <h4 className=\"title is-4 is-uppercase py-4 mb-0 cards__title\">\n            {character.name}\n          </h4>\n          <div className=\"cards__info mb-4\">\n            <p>\n              {`Gender: ${character.gender}`}\n            </p>\n            <p>\n              {`Species: ${character.species}`}\n            </p>\n            <p>\n              {`Status: ${character.status}`}\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      gender: PropTypes.string.isRequired,\n      species: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Pagination = ({ page, nextPage, prevPage }) => {\n  const pageNumbers = [];\n  let min = page;\n  let max = page + 6;\n\n  for (let i = min; i < max; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav className=\"d-flex\">\n      <button\n        type=\"button\"\n        onClick={() => prevPage()}\n        className=\"button is-primary\"\n      >\n        Previous\n      </button>\n      <ul className=\"pagination-list\">\n        {pageNumbers.map(pageNumber => (\n          <li key={page}>\n            <a href=\"!#\" className=\"pagination-link\">\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <button\n        type=\"button\"\n        onClick={() => nextPage()}\n        className=\"button is-primary\"\n      >\n        Next\n      </button>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const request = (url) => {\n  const newError = new Error('Server does not respond!');\n\n  return fetch(`${BASE_URL}${url}`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(newError);\n    });\n};\n\nexport const getCharacters = async(endpoint) => {\n  const charactersList = await request(`/character${endpoint || ''}`);\n\n  return charactersList;\n};\n\nexport const getEpisodes = async(endpoint) => {\n  const episodesList = await request(`/episode${endpoint}`);\n\n  return episodesList;\n};\n\nexport const getLocations = async(endpoint) => {\n  const locationsList = await request(`/episode${endpoint}`);\n\n  return locationsList;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Characters } from './Characters';\nimport { Pagination } from '../Pagination/Pagination';\nimport { getCharacters } from '../../api/api';\nimport './Characters/Characters.scss';\n\nexport const CharactersPage = () => {\n  const [characters, setCharacters] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [allPages, setAllPages] = useState(1);\n\n  useEffect(() => {\n    const serverResponse = async() => {\n      setIsLoading(true);\n\n      const listOfCharacters = await getCharacters(`/?page=${currentPage}`);\n\n      const pagesCount = await getCharacters();\n\n      setCharacters(listOfCharacters.results);\n      setAllPages(pagesCount.info.pages);\n      setIsLoading(false);\n    };\n\n    serverResponse();\n  }, [setCurrentPage, currentPage]);\n\n  const nextPage = () => {\n    setCurrentPage((currentPage + 1) || allPages);\n  };\n\n  const prevPage = () => {\n    setCurrentPage((currentPage - 1) || 1);\n  };\n\n  return (\n    <div className=\"characters pt-5\">\n      <Pagination\n        page={currentPage}\n        nextPage={nextPage}\n        prevPage={prevPage}\n      />\n      <Characters characters={characters} isLoading={isLoading} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { CharactersPage } from './components/CharactersPage/CharactersPage';\nimport './styles/general.scss';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__wrapper\">\n        <CharactersPage />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}