{"version":3,"sources":["images/logo.svg","images/image.jpg","components/Navigation/Navigation.jsx","api/api.js","components/Loader/Loader.jsx","components/CharactersPage/Character/Character.jsx","components/CharactersPage/Characters/Characters.jsx","components/Button/Button.jsx","components/SelectFilter/SelectFilter.jsx","components/CharactersPage/CharactersPage.jsx","pages/Characters.jsx","components/EpisodePage/EpisodePage.jsx","pages/Episodes.jsx","components/EmptyList/EmptyList.jsx","components/InputFiltered/InputFiltered.jsx","components/LocationsPage/LocationPage.jsx","pages/Locations.jsx","components/WatchListPage/WatchListPage.jsx","pages/MyWatchList.jsx","App.jsx","index.js"],"names":["module","exports","Navigation","className","to","src","logo","alt","BASE_URL","Loader","Character","character","useState","additionalInfo","setAdditionalInfo","id","name","image","gender","species","status","type","location","hideInfo","key","onClick","aria-hidden","cn","modal","e","stopPropagation","Characters","characters","isLoading","map","Button","text","classes","disabled","style","defaultProps","SelectFilter","values","handleChange","onChange","value","toUpperCase","CharactersPage","setCharacters","setIsLoading","info","setInfo","currentPage","setCurrentPage","filterGender","setFilterGender","filterSpecies","setFilterSpecies","filterStatus","setFilterStatus","charactersList","useEffect","axios","get","then","response","listOfCharacters","data","results","filterCharacters","useMemo","result","filter","undefined","pages","event","target","EpisodePage","episodes","setEpisodes","page","setPage","episodesList","listOfEpisodes","titles","title","episode","length","Episodes","EmptyList","picture","InputFiltered","placeholder","LocationsPage","locations","setLocations","filteredLocations","setFilteredLocations","setName","setType","dimension","setDimension","locationsList","listOfLocations","locationFilterList","toLowerCase","startsWith","Locations","WatchListPage","initialValue","JSON","parse","localStorage","getItem","setValue","setItem","stringify","useLocalStorage","watchLaterList","setWatchLaterList","episodeName","setEpisodeName","onSubmit","preventDefault","newList","uuidv4","required","itemClass","defaultChecked","updatedList","changeStatus","removeEpisode","MyWatchList","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3db21ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7562dd86.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.4703e617.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../images/logo.svg';\nimport './Navigation.scss';\n\nexport const Navigation = () => (\n  <nav className=\"Navigation\">\n    <div className=\"Navigation__wrapper\">\n      <div className=\"Navigation__content\">\n        <div className=\"Navigation__brand\">\n          <Link to=\"/\" className=\"Navigation__image-link\">\n            <img\n              src={logo}\n              alt=\"Logo\"\n              className=\"Navigation__image\"\n            />\n          </Link>\n        </div>\n        <ul className=\"Navigation__list\">\n          <li className=\"Navigation__item\">\n            <Link to=\"/\">\n              Characters\n            </Link>\n          </li>\n          <li className=\"Navigation__item\">\n            <Link to=\"/episodes\">\n              Episodes\n            </Link>\n          </li>\n          <li className=\"Navigation__item\">\n            <Link to=\"/locations\">\n              Locations\n            </Link>\n          </li>\n          <li className=\"Navigation__item\">\n            <Link to=\"/my-list\">\n              My watch\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n","export const BASE_URL = 'https://rickandmortyapi.com/api';\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Character.scss';\nimport '../Characters/Characters.scss';\nimport cn from 'classnames';\n\nexport const Character = ({ character }) => {\n  const [additionalInfo, setAdditionalInfo] = useState(false);\n\n  const {\n    id,\n    name,\n    image,\n    gender,\n    species,\n    status,\n    type,\n    location,\n  } = character;\n\n  function showInfo() {\n    return setAdditionalInfo(true);\n  }\n\n  function hideInfo() {\n    return setAdditionalInfo(false);\n  }\n\n  return (\n    <>\n      <div\n        className=\"card cards__card\"\n        key={id}\n        onClick={() => showInfo()}\n        aria-hidden=\"true\"\n      >\n        <div className=\"card-image\">\n          <img\n            src={image}\n            alt=\"Character\"\n            className=\"cards__image\"\n          />\n        </div>\n        <h4 className=\"title is-4 is-uppercase p-4 cards__title\">\n          {name}\n        </h4>\n      </div>\n      {additionalInfo && (\n        <div\n          className={cn({\n            modal: true,\n            'modal--active': additionalInfo,\n          })}\n          aria-hidden=\"true\"\n          onClick={() => hideInfo()}\n        >\n          <div\n            className=\"modal__content\"\n            onClick={e => e.stopPropagation()}\n            aria-hidden=\"true\"\n          >\n            <img\n              src={image}\n              alt=\"Character\"\n              className=\"modal__image\"\n            />\n            <div className=\"modal__text mb-4\">\n              <p>\n                {`Gender: `}\n                <span className=\"modal__info has-text-primary\">\n                  {gender}\n                </span>\n              </p>\n              <p>\n                {`Species: `}\n                <span className=\"modal__info has-text-primary\">\n                  {species}\n                </span>\n              </p>\n              <p>\n                {`Status: `}\n                <span className=\"modal__info has-text-primary\">\n                  {status}\n                </span>\n              </p>\n              {type && (\n                <p>\n                  {`Type: `}\n                  <span className=\"modal__info has-text-primary\">\n                    {type}\n                  </span>\n                </p>\n              )}\n\n              <p>\n                {`Location: `}\n                <span className=\"modal__info has-text-primary\">\n                  {location.name}\n                </span>\n              </p>\n            </div>\n            <button\n              type=\"button\"\n              onClick={() => hideInfo()}\n              className=\"button is-danger modal__button\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nCharacter.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    location: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../../Loader/Loader';\n\nimport 'bulma';\nimport './Characters.scss';\nimport { Character } from '../Character/Character';\n\nexport const Characters = ({ characters, isLoading }) => {\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"cards\">\n      {characters.map(character => (\n        <Character character={character} />\n      ))}\n    </div>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      gender: PropTypes.string.isRequired,\n      species: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      location: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n    }),\n  ).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ text, classes, onClick, disabled }) => {\n  const click = () => onClick();\n\n  return (\n    <button\n      type=\"button\"\n      style={{\n        'min-width': '100px',\n      }}\n      className={classes}\n      disabled={disabled}\n      onClick={click}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  disabled: false,\n  onClick: true,\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  classes: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SelectFilter = ({\n  values,\n  classes,\n  handleChange,\n  name,\n}) => (\n  <div className={`select ${classes}`}>\n    <select onChange={handleChange} name={name}>\n      {values.map(value => (\n        <option\n          key={value}\n          value={value}\n          className=\"has-text-centered\"\n        >\n          {value.toUpperCase()}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nSelectFilter.defaultProps = {\n  classes: '',\n};\n\nSelectFilter.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.string).isRequired,\n  classes: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\n\nimport { BASE_URL } from '../../api/api';\nimport { Characters } from './Characters';\n\nimport './CharactersPage.scss';\nimport { Button } from '../Button/Button';\nimport { SelectFilter } from '../SelectFilter';\n\nexport const CharactersPage = () => {\n  const [characters, setCharacters] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [info, setInfo] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterGender, setFilterGender] = useState('gender');\n  const [filterSpecies, setFilterSpecies] = useState('species');\n  const [filterStatus, setFilterStatus] = useState('status');\n\n  const charactersList = `${BASE_URL}/character/?page=${currentPage}`;\n\n  useEffect(() => {\n    axios.get(charactersList)\n      .then((response) => {\n        setIsLoading(true);\n        const listOfCharacters = (response.data);\n\n        setCharacters(listOfCharacters.results);\n        setInfo(listOfCharacters.info);\n        setIsLoading(false);\n      });\n  }, [charactersList]);\n\n  const filterCharacters = useMemo(() => {\n    let result = characters;\n\n    switch (filterGender) {\n      case 'all':\n        result = result.filter(character => character.gender !== undefined);\n\n        return result;\n      case 'male':\n        result = result.filter(character => character.gender === 'Male');\n\n        return result;\n      case 'female':\n        result = result.filter(character => character.gender === 'Female');\n\n        return result;\n      case 'unknown':\n        result = result.filter(character => character.gender === 'unknown');\n\n        return result;\n      default:\n        break;\n    }\n\n    switch (filterSpecies) {\n      case 'all':\n        result = result.filter(character => character.species !== undefined);\n\n        return result;\n      case 'human':\n        result = result.filter(character => character.species === 'Human');\n\n        return result;\n      case 'alien':\n        result = result.filter(character => character.species === 'Alien');\n\n        return result;\n      default:\n        break;\n    }\n\n    switch (filterStatus) {\n      case 'all':\n        result = result.filter(character => character.status !== undefined);\n\n        return result;\n      case 'dead':\n        result = result.filter(character => character.status === 'Dead');\n\n        return result;\n      case 'alive':\n        result = result.filter(character => character.status === 'Alive');\n\n        return result;\n      case 'unknown':\n        result = result.filter(character => character.status === 'unknown');\n\n        return result;\n      default:\n        break;\n    }\n\n    return result;\n  }, [characters, filterGender, filterSpecies, filterStatus]);\n\n  const nextPage = () => {\n    if (currentPage > info.pages) {\n      return;\n    }\n\n    setCurrentPage(currentPage + 1);\n  };\n\n  const prevPage = () => {\n    if (currentPage < 1) {\n      return;\n    }\n\n    setCurrentPage(currentPage - 1);\n  };\n\n  const genderValues = ['all', 'male', 'female', 'unknown'];\n  const statusValues = ['all', 'dead', 'alive', 'unknown'];\n  const speciesValues = ['all', 'human', 'alien'];\n\n  return (\n    <div className=\"characters\">\n      <form className=\"characters__form box mt-4\">\n        <Button\n          disabled={info.pages === null}\n          onClick={() => prevPage()}\n          classes=\"button is-primary\"\n          text=\"Previous\"\n        />\n        <SelectFilter\n          values={genderValues}\n          classes=\"is-primary\"\n          name=\"gender\"\n          handleChange={event => setFilterGender(event.target.value)}\n        />\n        <SelectFilter\n          values={statusValues}\n          classes=\"is-primary\"\n          name=\"status\"\n          handleChange={event => setFilterStatus(event.target.value)}\n        />\n        <SelectFilter\n          values={speciesValues}\n          classes=\"is-primary\"\n          name=\"species\"\n          handleChange={event => setFilterSpecies(event.target.value)}\n        />\n        <Button\n          disabled={info.pages === currentPage}\n          onClick={() => nextPage()}\n          classes=\"button is-primary\"\n          text=\"Next\"\n        />\n      </form>\n      <Characters characters={filterCharacters} isLoading={isLoading} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { CharactersPage } from '../components/CharactersPage/CharactersPage';\n\nexport function Characters() {\n  return (\n    <>\n      <CharactersPage />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BASE_URL } from '../../api/api';\n\nimport { Button } from '../Button/Button';\nimport { Loader } from '../Loader/Loader';\n\nimport './EpisodePage.scss';\n\nexport const EpisodePage = () => {\n  const [episodes, setEpisodes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n\n  const episodesList = `${BASE_URL}/episode`;\n\n  useEffect(() => {\n    axios.get(episodesList)\n      .then((response) => {\n        setIsLoading(true);\n        const listOfEpisodes = (response.data);\n\n        setEpisodes(listOfEpisodes.results);\n        setInfo(listOfEpisodes.info);\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    axios.get(`${episodesList}?page=${page}`)\n      .then((response) => {\n        setIsLoading(true);\n        const listOfEpisodes = (response.data);\n\n        setEpisodes(listOfEpisodes.results);\n        setIsLoading(false);\n      });\n  }, [page]);\n\n  const titles = ['id', 'episode', 'name', 'air_date', 'characters'];\n  const prevPage = () => {\n    if (page < 1) {\n      return;\n    }\n\n    setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    if (page > info.pages) {\n      return;\n    }\n\n    setPage(page + 1);\n  };\n\n  return (\n    <div className=\"Episodes\">\n      <div className=\"Episodes__wrapper\">\n        <div className=\"Episodes__buttons\">\n          <Button\n            text=\"Previous\"\n            disabled={info.pages === null}\n            classes=\"button is-primary\"\n            onClick={prevPage}\n          />\n          <Button\n            text=\"Next\"\n            disabled={info.pages === page}\n            classes=\"button is-primary\"\n            onClick={nextPage}\n          />\n        </div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <table className=\"table\">\n            <thead className=\"table__titles\">\n              <tr className=\"table__title\">\n                {titles.map(title => (\n                  <th key={title}>\n                    {title.toUpperCase()}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {episodes.map(episode => (\n                <tr key={episode.id} className=\"table__row\">\n                  {titles.map(key => (\n                    <td key={key} className=\"table__item\">\n                      {key !== 'characters'\n                        ? episode[key]\n                        : episode[key].length\n                      }\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { EpisodePage } from '../components/EpisodePage';\n\nexport function Episodes() {\n  return (\n    <>\n      <EpisodePage />\n    </>\n  );\n}\n","import React from 'react';\nimport picture from '../../images/image.jpg';\nimport './EmptyList.scss';\n\nexport const EmptyList = () => (\n  <div className=\"EmptyList\">\n    <img\n      className=\"EmptyList__image\"\n      src={picture}\n      alt=\"Two characters\"\n    />\n    <p className=\"EmptyList__text\">\n      Nothing to watch\n    </p>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InputFiltered.scss';\n\nexport const InputFiltered = ({\n  value,\n  onChange,\n  placeholder,\n  classes,\n}) => (\n  <input\n    type=\"text\"\n    value={value}\n    onChange={onChange}\n    placeholder={placeholder}\n    className={`input ${classes}`}\n  />\n);\n\nInputFiltered.propTypes = {\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  classes: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport axios from 'axios';\nimport { BASE_URL } from '../../api/api';\n\nimport { Button } from '../Button/Button';\nimport { EmptyList } from '../EmptyList/EmptyList';\nimport { InputFiltered } from '../InputFiltered/InputFiltered';\nimport { Loader } from '../Loader/Loader';\n\nexport const LocationsPage = () => {\n  const [locations, setLocations] = useState([]);\n  const [filteredLocations, setFilteredLocations] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [info, setInfo] = useState({});\n  const [page, setPage] = useState(1);\n\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [dimension, setDimension] = useState('');\n\n  const locationsList = `${BASE_URL}/location`;\n\n  useEffect(() => {\n    axios.get(locationsList)\n      .then((response) => {\n        setInfo(response.data.info);\n      });\n  }, []);\n\n  useEffect(() => {\n    axios.get(`${locationsList}?page=${page}`)\n      .then((response) => {\n        setIsLoading(true);\n        const listOfLocations = (response.data);\n\n        setLocations(listOfLocations.results);\n        setFilteredLocations(listOfLocations.results);\n        setIsLoading(false);\n      });\n  }, [page]);\n\n  useMemo(() => {\n    let locationFilterList = locations;\n\n    if (name) {\n      locationFilterList = locationFilterList.filter(\n        location => location.name.toLowerCase()\n          .startsWith(name.toLowerCase()),\n      );\n    }\n\n    if (type) {\n      locationFilterList = locationFilterList.filter(\n        location => location.type.toLowerCase()\n          .startsWith(type.toLowerCase()),\n      );\n    }\n\n    if (dimension) {\n      locationFilterList = locationFilterList.filter(\n        location => location.dimension.toLowerCase()\n          .startsWith(dimension.toLowerCase()),\n      );\n    }\n\n    if (name.length === 0\n        || type.length === 0\n        || dimension.length === 0\n    ) {\n      setFilteredLocations(locationFilterList);\n    } else {\n      setFilteredLocations(locations);\n    }\n  }, [name, type, dimension, locations]);\n\n  const titles = ['id', 'name', 'type', 'dimension', 'residents'];\n\n  const prevPage = () => {\n    if (page < 1) {\n      return;\n    }\n\n    setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    if (page > info.pages) {\n      return;\n    }\n\n    setPage(page + 1);\n  };\n\n  return (\n    <div className=\"locations\">\n      <form className=\"locations__form mt-4\">\n        <span className=\"locations__text\">\n          Search by:\n        </span>\n        <InputFiltered\n          value={name}\n          placeholder=\"Name\"\n          onChange={event => setName(event.target.value)}\n        />\n        <InputFiltered\n          value={type}\n          placeholder=\"Type\"\n          onChange={event => setType(event.target.value)}\n        />\n        <InputFiltered\n          value={dimension}\n          placeholder=\"Dimension\"\n          onChange={event => setDimension(event.target.value)}\n        />\n      </form>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {filteredLocations.length > 1 ? (\n            <table className=\"table mt-4\">\n              <thead className=\"table__titles\">\n                <tr className=\"table__title\">\n                  {titles.map(title => (\n                    <th key={title}>\n                      {title.toUpperCase()}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {filteredLocations.map(episode => (\n                  <tr key={episode.id} className=\"table__row\">\n                    {titles.map(key => (\n                      <td key={key} className=\"table__item\">\n                        {key !== 'residents'\n                          ? episode[key]\n                          : episode[key].length\n                        }\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <EmptyList />\n          )}\n        </>\n      )}\n      <Button\n        text=\"Previous\"\n        disabled={info.pages === null}\n        classes=\"button\"\n        onClick={prevPage}\n      />\n      <Button\n        text=\"Next\"\n        disabled={info.pages === page}\n        classes=\"button\"\n        onClick={nextPage}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { LocationsPage } from '../components/LocationsPage/LocationPage';\n\nexport function Locations() {\n  return (\n    <>\n      <LocationsPage />\n    </>\n  );\n}\n","/* eslint-disable no-shadow */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport cn from 'classnames';\nimport './WatchListPage.scss';\nimport { EmptyList } from '../EmptyList/EmptyList';\nimport { Button } from '../Button/Button';\n\nconst localStorageKey = 'watchList';\n\nconst useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (value) => {\n    setValue(value);\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  return [value, save];\n};\n\nexport const WatchListPage = () => {\n  // eslint-disable-next-line max-len\n  const [watchLaterList, setWatchLaterList] = useLocalStorage(localStorageKey, []);\n  const [episodeName, setEpisodeName] = useState('');\n\n  const addEpisode = (event) => {\n    event.preventDefault();\n\n    const newEpisode = {\n      id: uuidv4(),\n      name: episodeName,\n      status: false,\n    };\n\n    const newList = [newEpisode, ...watchLaterList];\n\n    setEpisodeName('');\n    setWatchLaterList(newList);\n  };\n\n  const removeEpisode = (id) => {\n    const updatedList = [...watchLaterList].filter(\n      episode => episode.id !== id,\n    );\n\n    setWatchLaterList(updatedList);\n  };\n\n  const changeStatus = (id) => {\n    const updatedList = watchLaterList.map(episode => (episode.id === id ? {\n      ...episode,\n      status: !episode.status,\n    } : { ...episode }));\n\n    setWatchLaterList(updatedList);\n  };\n\n  return (\n    <div className=\"WatchList\">\n      <div className=\"WatchList__content\">\n        <form onSubmit={addEpisode}>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label className=\"label\">\n                Write the next episode to watch later :)\n                <input\n                  className=\"input is-primary\"\n                  type=\"text\"\n                  placeholder=\"Episode\"\n                  required\n                  value={episodeName}\n                  onChange={event => setEpisodeName(event.target.value)}\n                />\n              </label>\n              <button type=\"submit\" className=\"button is-primary\">\n                ADD NEW EPISODE\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      {watchLaterList.length < 1 ? (\n        <EmptyList />\n      ) : (\n        <div className=\"WatchList__episodes box mt-4\">\n          <ul className=\"WatchList__list\">\n            {watchLaterList.map((episode) => {\n              const itemClass = cn('WatchList__item', {\n                'WatchList__item--checked': episode.status,\n                'WatchList__item--unchecked': !episode.status,\n              });\n\n              return (\n                <li key={episode.id} className={itemClass}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={episode.status}\n                      className=\"WatchList__text\"\n                      onClick={() => changeStatus(episode.id)}\n                    />\n                    {episode.name}\n                  </label>\n                  <Button\n                    text=\"Remove\"\n                    classes=\"button is-danger\"\n                    onClick={() => removeEpisode(episode.id)}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { WatchListPage } from '../components/WatchListPage/WatchListPage';\n\nexport function MyWatchList() {\n  return (\n    <>\n      <WatchListPage />\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation/Navigation';\nimport { Characters } from './pages/Characters';\nimport { Episodes } from './pages/Episodes';\nimport { Locations } from './pages/Locations';\nimport { MyWatchList } from './pages/MyWatchList';\n\nimport './styles/_reset.scss';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <div className=\"App__wrapper\">\n        <Switch>\n          <Route exact path=\"/\" component={Characters} />\n          <Route exact path=\"/episodes\" component={Episodes} />\n          <Route exact path=\"/locations\" component={Locations} />\n          <Route exact path=\"/my-list\" component={MyWatchList} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}